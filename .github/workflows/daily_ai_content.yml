name: Daily AI Content Generation

on:
  schedule:
    - cron: '0 1 * * *'  # Daily at 1 AM UTC
  workflow_dispatch:     # Optional manual trigger

permissions:
  contents: write

jobs:
  generate-content:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Generate AI content using OpenAI API
      id: generate
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      run: |
        TOPICS=(
          "Data Lake vs Data Warehouse"
          "ETL vs ELT"
          "Stream Processing vs Batch Processing"
          "Data Pipeline Best Practices"
          "Data Quality in Engineering"
          "Metadata Management"
          "Data Orchestration Tools"
          "Cloud Data Engineering Trends"
          "Data Engineering for Machine Learning"
          "Scaling Data Pipelines"
        )
        # Pick a random topic
        RANDOM_TOPIC=${TOPICS[$RANDOM % ${#TOPICS[@]}]}

        echo "Selected topic: $RANDOM_TOPIC"

        # Prepare the prompt for AI
        PROMPT="Write a detailed article about the following Data Engineering topic:\n$RANDOM_TOPIC"

        # Call OpenAI API (GPT-4 or GPT-3.5-turbo)
        RESPONSE=$(curl -s https://api.openai.com/v1/chat/completions \
          -H "Content-Type: application/json" \
          -H "Authorization: Bearer $OPENAI_API_KEY" \
          -d '{
            "model": "gpt-4.1",
            "messages": [{"role": "user", "content": "'"$PROMPT"'"}],
            "max_tokens": 700,
            "temperature": 0.7
          }' | jq -r '.choices[0].message.content')

        echo "AI content generated."

        # Save content to markdown file with date and sanitized topic
        DATE=$(date +'%Y-%m-%d')
        FILENAME="data_engineering_${DATE}.md"
        echo -e "# $RANDOM_TOPIC\n\n$RESPONSE" > "$FILENAME"

        echo "filename=$FILENAME" >> $GITHUB_OUTPUT

    - name: Commit and push AI content file
      uses: stefanzweifel/git-auto-commit-action@v5
      with:
        commit_message: "Adding content for ${{ steps.generate.outputs.filename }}"
        file_pattern: "*.md"
        branch: main
